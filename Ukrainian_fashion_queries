# Write a query to find total number of orders?
db.oc_order.find().count()

# SQL: 
SELECT count(*) FROM oc_order;

# Write a query to find the total sales value?
db.oc_order.aggregate([{$group:{_id: null,"total_sales_value":{$sum:"$total"}}}, {$project:{"_id":0}}])

# SQL: 
SELECT sum(total) FROM oc_order;

# Write a query to find total customers?
db.oc_customer.find().count()

# SQL: 
SELECT count(customer_id) FROM oc_customer;

# Write a query to find total number of people online?
# (other concept used: sessions)

# Write a query to find total number of orders and total sales value by country-wise?
db.oc_country.aggregate([{$lookup:{from:"oc_order",localField:"country_id",foreignField:"payment_country_id",as:"sales"}},{$unwind:"$sales"},{$group:{_id:"$name",totalOrders:{$sum:"$sales.order_id"},totalSales:{$sum:"$sales.total"}}}, {$sort:{"_id":1}} ]);

# SQL: 
SELECT oc_country.name, count(*) AS Count, SUM(oc_order.total) as TotalValue FROM oc_country JOIN oc_order ON oc_country.country_id = oc_order.payment_country_id group by oc_country.country_id;

# Write a query to find the latest 5 recent activities?
db.oc_affiliate.find({},{"_id":0,"affiliate_activity.key":1,"affiliate_activity.data":1}).sort({"affiliate_activity.date_added":-1}).limit(5).pretty();

# SQL: 
select afa.key,afa.data from oc_affiliate as af JOIN oc_affiliate_activity as afa ON af.affiliate_id = afa.affiliate_id order by af.date_added desc limit 5;

# Write a query to find recent 5 orders?
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}}, {"$sort":{"date_added":-1}},{$limit:5}, {$project: {_id:0,order_id:1, "Customer": {"$concat":["$firstname"," ", "$lastname"]}, "order_status.name":1, "order_product.total":1, "date_added":1, "date_modified":1}}]);

# SQL: 
select O.order_id, concat(O.firstname," ",O.lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order as O JOIN oc_order_status as OS ON OS.order_status_id = O.order_status_id order by O.date_added desc limit 5;

#Write a query to find total number of orders are completed?
db.oc_order.find({"order_status_id":5}).count();

# SQL: 
SELECT count(*) from oc_order where oc_order.order_status_id = 5;

# Write a query to find number of orders are processing?
db.oc_order.find({"order_status_id":2}).count();

# SQL: 
SELECT count(*) from oc_order where oc_order.order_status_id = 2;

# Write a query to find total number of orders which are having other than completed and processing statuses?
db.oc_order.find({"$and":[{"order_status_id":{"$ne":2}},{"order_status_id":{"$ne":5}}]}).count()

# SQL: 
SELECT count(*) from oc_order where oc_order.order_status_id != 2 AND oc_order.order_status_id != 5;

# Write a query to find the recurring customers/profiles?
(No data)

# Write a query to find the products return?
db.oc_return.find({"return_status_id":2}).pretty();  - For awaiting products
# SQL: 
SELECT count(*) as Awaiting_Products from oc_return where oc_return.return_status_id = 2;

db.oc_return.find({"return_status_id":1}).pretty();  - For pending returns
# SQL: 
SELECT count(*) as Pending_Returns from oc_return where oc_return.return_status_id = 1;

db.oc_return.find({"return_status_id":3}).pretty();  - For complete returns
# SQL: 
SELECT count(*) as Complete_Returns from oc_return where oc_return.return_status_id = 3;

# Write a query to find the details of given order ID (page: Orders, filter data)
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}},{"$match":{"order_id":37}},{"$project":{"_id":0,"order_id":1,"Customer": {"$concat":["$payment_firstname"," ", "$payment_lastname"]}, "order_status.name":1, "order_product.total":1, "date_added":1, "date_modified":1} }]);

# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON O.order_id = OS.order_status_id where O.order_id = 10;

# Write a query to find the details of given dateAdded (page: Orders, filter data)
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}}, {"$match":{"date_added":{"$gte": new Date("2014-05-08 00:00:00"),"$lte":new Date("2014-05-08 23:59:59")}}}, {"$project":{"_id":0,"order_id":1,"Customer": {"$concat":["$payment_firstname"," ","$payment_lastname"]},"order_status.name":1,"order_product.total":1,"date_added":1,"date_modified":1} }]);
# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where O.date_added >= "2014-06-30 00:00:00" AND O.date_added < "2014-06-30 23:59:59";

# Write a query to find the details of given dateModified(greater than) (page: Orders, filter data)
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}}, {"$match":{"date_modified":{"$gte": new Date("2014-08-22 00:00:00"),"$lte":new Date("2014-08-22 23:59:59")}}}, {"$project":{"_id":0,"order_id":1,"Customer": {"$concat":["$payment_firstname"," ","$payment_lastname"]},"order_status.name":1,"order_product.total":1,"date_added":1,"date_modified":1} }]);
# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where O.date_modified >= "2014-05-29 00:00:00" AND O.date_modified < "2014-05-29 23:59:59";

# Write a query to find the details of given Total purchase value(greater than) (page: Orders, filter data)
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}}, {"$match":{"order_product.total":{"$gte":50.95}}}, {"$project":{"_id":0,"order_id":1,"Customer": {"$concat":["$payment_firstname"," ", "$payment_lastname"]}, "order_status.name":1, "order_product.total":1, "date_added":1, "date_modified":1} }]).pretty(); 
# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where O.total= 93.9800 ;

# Write a query to find the details of given Customer name (either first name or last name) (page: Orders, filter data)
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}},{"$match":{$or:[{"firstname":"Christine"},{"lastname":"Braid"}]}},{"$project":{"_id":0,"order_id":1,"Customer": {"$concat":["$payment_firstname"," ","$payment_lastname"]},"order_status.name":1,"order_product.total":1,"date_added":1,"date_modified":1} }]);

# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where O.firstname="Christine" or O.lastname="Braid";

# Write a query to find the order details of given order status (Complete,Canceled, Processed etc) (page: Orders, filter data)
db.oc_order.aggregate([{"$lookup":{"from":"oc_order_status","localField":"order_status_id","foreignField":"order_status_id", as:"order_status"}},{"$match":{"order_status.name":"Complete"}},{"$project":{"_id":0,"order_id":1,"Customer": {"$concat":["$payment_firstname"," ", "$payment_lastname"]}, "order_status.name":1, "order_product.total":1, "date_added":1, "date_modified":1} }]);

# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where OS.name="Complete";

# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where OS.name="Canceled";

# SQL: 
select order_id, CONCAT(firstname," ",lastname) as Customer, OS.name, O.total, O.date_added, O.date_modified from oc_order O JOIN oc_order_status OS ON OS.order_status_id = O.order_status_id where OS.name="Processed";

# Write a query to find the return details of given return id (page: Product Returns	, filter data)
db.oc_return.aggregate([{"$match":{"return_id":8}},{"$project":{"_id":0,"return_id":1,"order_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"product":1,"model":1,"return_status.name":1,"date_added":1,"date_modified":1}}])

# SQL: 
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE return_id = 8;

# Write a query to find the return details of given customer firstname or lastname (page: Product Returns	, filter data)
db.oc_return.aggregate([{"$match":{"$or":[{"firstname":"Johna198"},{"lastname":"Johna198"}]}},{"$project":{"_id":0,"return_id":1,"order_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"product":1,"model":1,"return_status.name":1,"date_added":1,"date_modified":1}}])

# SQL:
SELECT return_id, order_id, Customer, product, model, name, date_added, date_modified FROM
(SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id) as tab
WHERE Customer like '%Batukan Albeni%';

# Write a query to find the return details of given model number (page: Product Returns)
db.oc_return.aggregate([{"$match":{"model":"lpzYFOmKhPyw"}},{"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]);

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE r.model='lpzYFOmKhPyw';

# Write a query to find the return details of given date of date-added (page: Product Returns)
db.oc_return.aggregate([{"$match":{"date_added":{"$gte": new Date("2016/08/18 00:00:00"),"$lte":new Date("2016/08/18 23:59:59")}}}, {"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]);

# SQL: 
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE r.date_added >='2020-09-10 00:00:00' AND r.date_added <= '2020-09-10 23:59:59';

# Write a query to find the return details of given order_id (page: Product Returns)
db.oc_return.aggregate([{"$match":{"order_id":471}},{"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]).pretty();

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE r.order_id = 471;

# Write a query to find the return details of given product: (page: Product Returns)
db.oc_return.aggregate([{"$match":{"product":"eryuuowi"}},{"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}])

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE r.product = 'hMbXLYGpl';

# Write a query to find the return details of given Product Return Status[Awaiting Products]: (page: Product Returns)
db.oc_return.aggregate([{"$match":{"return_status.name":"Awaiting Products"}},{"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]);

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE rs.name = 'Awaiting Products';

# Write a query to find the return details of given Product Return Status[Complete]: (page: Product Returns)
db.oc_return.aggregate([{"$match":{"return_status.name":"Complete"}},{"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]);

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE rs.name = 'Complete';

# Write a query to find the return details of given Product Return Status[Pending]: (page: Product Returns)
db.oc_return.aggregate([{"$match":{"return_status.name":"Pending"}},{"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]);

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE rs.name = 'Pending';

# Write a query to find the return details of given modified date: (page: Product Returns)
db.oc_return.aggregate([{"$match":{"date_modified":{"$gte": new Date("2019/08/14 00:00:00"),"$lte":new Date("2019/08/14 23:59:59")}}}, {"$project":{"_id":0,"return_id":1,"Customer":{"$concat":["$firstname"," ","$lastname"]},"model":1,"date_added":1,"order_id":1,"product":1,"return_status.name":1,"date_modified":1 }}]);

# SQL:
SELECT r.return_id,r.order_id,CONCAT(r.firstname," ",r.lastname) AS Customer, r.product, r.model, rs.name, r.date_added, r.date_modified FROM oc_return r 
INNER JOIN (SELECT return_status_id,name FROM oc_return_status) rs ON r.return_status_id = rs.return_status_id WHERE r.date_modified >= '2020-10-04 00:00:00' and r.date_modified <= '2020-10-04 23:59:59';

# Write a query to find all the customer details (page: Customers)
db.oc_customer.aggregate([{"$match":{}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ","$lastname"]},"email":1,"customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, ci.ip,cgd.name, date_added, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id
) as tab

# Write a query to find all the customer details of given customer firstname or lastname(page: Customers)
db.oc_customer.aggregate([{"$match":{"$or":[{"firstname":"Aisha"},{"lastname":""}]}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1, Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, ci.ip,cgd.name, date_added, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id
) as tab where Customer like '%Marina Shevzov%';

# Write a query to find all the customer details of given customer group(selected)(page: Customers)
db.oc_customer.aggregate([{"$match":{"customer_group.customer_group_description.name":"selected"}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, ci.ip,cgd.name, date_added, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id
) as tab where name="selected";

# Write a query to find all the customer details of given customer group(new)(page: Customers)
db.oc_customer.aggregate([{"$match":{"customer_group.customer_group_description.name":"new"}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, ci.ip,cgd.name, date_added, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id
) as tab where name="new";

# Write a query to find all the customer details If Approved = YES (page: Customers)
db.oc_customer.aggregate([{"$match":{"approved":true}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1, Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where approved=1;

# Write a query to find all the customer details, If Approved = NO(page: Customers)
db.oc_customer.aggregate([{"$match":{"approved":false}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where approved=0;

# Write a query to find all the customer details of given date_added (page: Customers)
db.oc_customer.aggregate([{"$match":{"date_added":{"$gte": new Date("2017/01/23 00:00:00"),"$lte":new Date("2017/01/23 23:59:59")}}}, {"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where date_added >= '2014-06-15 00:00:00' and date_added <= '2014-06-15 23:59:59';

# Write a query to find all the customer details of given customer email (page: Customers)
db.oc_customer.aggregate([{"$match":{"email":"irena_ten@yahoo.com"}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where email = 'hrynuiky@yahoo.ca';

# Write a query to find all the customer details of given customer status(If Status = YES)(page: Customers)
db.oc_customer.aggregate([{"$match":{"status":true}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where status = 'Enabled';

# Write a query to find all the customer details of given customer status(If Status = NO)(page: Customers)
db.oc_customer.aggregate([{"$match":{"status":false}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);
 
# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where status = 'Disabled';

# Write a query to find all the customer details of given ip address(page: Customers)
db.oc_customer.aggregate([{"$match":{"ip":"175.101.14.246"}},{"$project":{"_id":0,"Customer":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "customer_group.customer_group_description.name":1,Status:{$cond:{if: {$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}, "customer_ip.ip":1, "date_added":1}}]);

# SQL:
SELECT Customer, email, name, status, ip, date_added from
(SELECT c.customer_group_id, CONCAT(firstname," ",lastname) AS Customer, email, approved, date_added, ci.ip, cgd.name,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_customer c 
INNER JOIN (SELECT customer_group_id, name from oc_customer_group_description) cgd ON c.customer_group_id = cgd.customer_group_id
INNER JOIN (SELECT customer_id, ip from oc_customer_ip) ci ON c.customer_id = ci.customer_id 
) as tab where ip = '94.178.254.111';

# REPORTS:
# Write a query to get the orders details between the two given dates. (Reports page)


# Affiliates:
# Write a query to find the affiliate data (in marketing tab)
db.oc_affiliate.aggregate([{"$match":{}},{"$project":{_id:0,"Affiliate Name":{"$concat":["firstname"," ","lastname"]},"email":1,"commission":1,Status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_affiliate;

# Write a query to find the affiliate data (in marketing tab) by using the given Affiliate Name.
db.oc_affiliate.aggregate([{"$match":{"$or":[{"firstname":"Hoang"},{"lastname":""}]}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "commission":1, Status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_affiliate) as tab
where Customer = 'Stacy Keibler';

# Write a query to find the affiliate data (in marketing tab) for given status as Enabled.
db.oc_affiliate.aggregate([{"$match":{"status":true}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "commission":1, status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_affiliate) as tab
where status = 'Enabled';

# Write a query to find the affiliate data (in marketing tab) for given status as Disabled.
db.oc_affiliate.aggregate([{"$match":{"status":false}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "commission":1, status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_affiliate) as tab
where status = 'Disabled';

# Write a query to find the affiliate data (in marketing tab) for given Date Added.
db.oc_affiliate.aggregate([{"$match":{"date_added":{"$gte": new Date("2019/10/24 00:00:00"),"$lte":new Date("2019/10/24 23:59:59")}}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "commission":1, status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_affiliate) as tab
where date_added >= '2019-07-07 00:00:00' and date_added <= '2019-07-07 23:59:59';

# Write a query to find the affiliate data (in marketing tab) for given email.
db.oc_affiliate.aggregate([{"$match":{"email":"printerast@gmail.com"}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ","$lastname"]}, "email":1, "commission":1, status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission,
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_affiliate) as tab
where email = 'stacykeibler001@gmail.com';

# Write a query to find the affiliate data (in marketing tab) which are not approved.
db.oc_affiliate.aggregate([{"$match":{"approved":false}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ","$lastname"]}, "email":1, "commission":1, status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added, approved from oc_affiliate) as tab
where approved = 0;

# Write a query to find the affiliate data (in marketing tab) which are approved.
db.oc_affiliate.aggregate([{"$match":{"approved":true}},{"$project":{_id:0,"Affiliate Name":{"$concat":["$firstname"," ", "$lastname"]}, "email":1, "commission":1, status:{$cond:{if:{$eq:["$status",true]},then:"Enabled",else:"Disabled"}},"date_added":1}}])

# SQL:
SELECT Customer, email,commission, status, date_added from
(SELECT CONCAT(firstname," ",lastname) AS Customer, email, commission, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added, approved from oc_affiliate) as tab
where approved = 1;

# Write a query to display the list of coupons (Coupons in Marketing tab)
db.oc_coupon.aggregate([{"$match":{}},{"$project":{_id:0, name:1, code:1, discount:1, date_start:1, date_end:1, status:{$cond:{if:{$eq:["$status",true]}, then:"Enabled", else:"Disabled"}}}}])

# SQL:
SELECT name, code, discount, date_start, date_end, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status from oc_coupon;

# Write a query to display the list of users (Users in System tab)
db.oc_user.aggregate([{"$match":{}},{$project:{_id:0,username:1,status:{$cond:{if:{$eq:["$status",true]}, then:"Enabled", else:"Disabled"}},date_added:1}}])

# SQL:
SELECT username, 
(CASE WHEN status = 1 THEN "Enabled"
	WHEN status = 0 THEN "Disabled"
    END) as status, date_added from oc_user;

# Write a query to display the currency list (Currency in Localisation of System tab)
db.oc_currency.aggregate([{"$project":{_id:0, title:1, code:1, value:1, date_modified:1}}])

# SQL:
SELECT title, code, value, date_modified from oc_currency;

# Write a query to display the country list (Countries in Localisation of System tab)
db.oc_country.aggregate([{$project:{_id:0,name:1,iso_code_2:1,iso_code_3:1}}]);

# SQL:
SELECT name, iso_code_2, iso_code_3 from oc_country;

# Write a query to display the zone list (Zones in Localisation of System tab)
db.oc_zone.aggregate([{"$lookup":{"from":"oc_country","localField":"country_id","foreignField":"country_id", as:"country"}},{"$project":{"_id":0,"country.name":1,"name":1,"code":1}}])

# SQL:
SELECT c.name as country, z.name as zone, z.code FROM oc_zone as z INNER JOIN oc_country as c ON z.country_id = c.country_id;

# Write a query to display the geo-zone list (GeoZones in Localisation of System tab)
db.oc_geo_zone.aggregate([{"$project":{"_id":0,"name":1,"description":1}}])

# SQL: 
SELECT name, description FROM oc_geo_zone;

# Report prac:
# db.oc_order.aggregate([{"$match":{"date_added":{"$gte":new Date("2014-05-08 00:00:00"),"$lt":new Date("2015-05-08")}}},{"$project":{_id:0,"Weekly":{"$week":new Date("2014-05-08")}}}])
