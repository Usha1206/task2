Write a query to find no of orders each customer have from db_ukrainian.oc_order
db.oc_order.aggregate([{$group:{_id:"$customer_id",count:{$sum:1}}},{"$sort":{"count":-1}}]); 
=================================================================================================================
Write a query to find sum of products for each order and sort them according to products decreasing order from oc_order_product collection.
 db.oc_order_product.aggregate([ {$match:{}},{$group: { _id:"$order_id", totalQty: {$sum: "$quantity"} } }, {$sort: {"totalQty":-1}} ]).pretty();
=================================================================================================================
How to join two collections in mongodb?
db.oc_order.aggregate([ { $lookup : { from: "oc_order_product", localField : "order_id", foreignField: "order_id", as:"COMMON"} }]).pretty();
==================================================================================================================
Write a query to find the orders placed by a customer,and no of products placed in an order. And also display total quantity ordered by customer.

db.oc_order.aggregate([ {$group : {_id: {order_id: "$order_id",customer_id:"$customer_id"},totalQty: {$sum: "$oc_order_product.quantity"} }},
                        { $lookup : { from: "oc_order_product", localField : "_id.order_id", foreignField: "order_id", as:"COMMON"} }, 
                        {$match: {COMMON: {$ne:[] }}} ]).pretty();
====================================================================================================================                       
Display the Count of Product with Product images count  of >= 3. 
db.oc_product_image.aggregate([ {$group: {_id:"$product_id",count:{$sum:1}} },{$match: {count: {$gt:3}}} ]);
====================================================================================================================
Display the Product with Product Options<=3.
db.oc_product_option.aggregate([ {$group: {_id:"$product_id", count: {$sum:1} }}, {$match: {count: {$lte:3}}} ]);
====================================================================================================================
Display the Products By Category in decreasing order:
db.oc_product_to_category.aggregate([ {$group: {_id:"$category_id", count: {$sum:1}}}, {$sort:{count:-1}} ]);
=====================================================================================================================
Display the Products By Category in decreasing order:
 db.oc_product_to_category.aggregate([ {$group: {_id:"$category_id", count: {$sum:1}}}, {$sort:{count:1}} ]);

=====================================================================================================================================================================
Date, group
db.sales.aggregate(
   [
     {
       $group:
         {
           _id: { day: { $dayOfYear: "$date"}, year: { $year: "$date" } },
           totalAmount: { $sum: { $multiply: [ "$price", "$quantity" ] } },
           count: { $sum: 1 }
         }
     }
   ]
)
Convert the sql schema of Ukrainian fashion DB to nosql schema and upload it to your mongodb atlas
Done !!
Successful imported the tables Orders, Products and Categories. Done!!

 

Write a query to find month-wise orders data. 
db.oc_order.aggregate([{ $group: { _id:{$substr:["$date_added",5,2]},count: {$sum: 1} } }]);

Write a query wherre i can see month wise top selling product based on the orders (on progress)
 db.oc_order.aggregate([ { $lookup: { from: "oc_order_product", localField: "_id.order_id", foreignField: "order_id",as:"COMMON"} },{ "$group": {"_id": {"product":"oc_order_product.product_id","month":{$substr:["$date_added",5,2]}}} }, {"$sort": {"count": -1}},{"$limit":2},{"$project":{"product_id":1}}]); 
 
Write a query to get data of last 7 days in commodity wise or apmc wise.
db.marketprices.aggregate([
 
    {"$sort": {

        "date" : -1

    }

    },

    {

        

        $group: {

            _id: { apmc: "$apmc", commodity: "$commodity" },

            data: { '$push' : '$$ROOT' }

        }

    },

    {

        $group: {

            _id: "$_id.commodity",

            apmc: { $push: { apmc: "$_id.apmc",data:  {

            '$slice' : [  "$data" , 7]

            } } }

        }

    },

    {
        $project: {

            _id: 1,
            apmc:-1,            

        }

    }

])
